{% comment %}
  Snippet: navegacion-suave.liquid
  Propósito: Configurar y cargar el script de navegación suave
  Ubicación: extensions/navegacion-mejorada/snippets/navegacion-suave.liquid
  
  Uso básico:
  {% render 'navegacion-suave' %}
  
  Uso con parámetros personalizados:
  {% render 'navegacion-suave', 
    selector: '.my-nav a',
    offset: 100,
    duration: 800
  %}
{% endcomment %}

{% comment %}
  Valores por defecto y configuración
{% endcomment %}
{%- liquid
  # Configuración desde el bloque (si existe) o valores por defecto
  assign ns_selector = selector | default: block.settings.selector | default: 'a[href^="#"]'
  assign ns_offset = offset | default: block.settings.offset | default: 0
  assign ns_duration = duration | default: block.settings.duration | default: 600
  assign ns_update_url = update_url | default: block.settings.update_url | default: false
  assign ns_allow_query = allow_query | default: block.settings.allow_query | default: true
  assign ns_smooth_only = smooth_only | default: block.settings.smooth_only | default: false
  
  # Configuración adicional para integración con el sistema de anclas
  assign ns_use_anchors = use_anchors | default: block.settings.use_anchors | default: true
  assign ns_active_class = active_class | default: block.settings.active_class | default: 'nav-active'
  assign ns_scroll_spy = scroll_spy | default: block.settings.scroll_spy | default: true
  
  # Determinar si usar el offset del header actual
  if ns_offset == 'auto'
    assign ns_offset = '#shopify-section-header' 
  endif
-%}

{% comment %}
  Script principal de navegación suave
  Este script puede trabajar solo o integrado con el sistema de anclas
{% endcomment %}
<script
  src="{{ 'navegacion-suave.js' | asset_url }}"
  data-selector="{{ ns_selector | escape }}"
  data-offset="{{ ns_offset }}"
  data-duration="{{ ns_duration }}"
  data-update-url="{{ ns_update_url }}"
  data-allow-query="{{ ns_allow_query }}"
  data-smooth-only="{{ ns_smooth_only }}"
  data-use-anchors="{{ ns_use_anchors }}"
  data-active-class="{{ ns_active_class | escape }}"
  data-scroll-spy="{{ ns_scroll_spy }}"
  defer>
</script>

{% comment %}
  CSS opcional para estados activos y transiciones
{% endcomment %}
{% if ns_scroll_spy or ns_use_anchors %}
<style>
  /* Clase para enlace activo */
  .{{ ns_active_class }} {
    color: {{ block.settings.active_color | default: '#000' }};
    font-weight: bold;
    position: relative;
  }
  
  /* Indicador visual para enlace activo */
  .{{ ns_active_class }}::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 0;
    width: 100%;
    height: 2px;
    background: {{ block.settings.active_color | default: '#000' }};
    animation: slideIn 0.3s ease;
  }
  
  /* Animación de entrada */
  @keyframes slideIn {
    from {
      width: 0;
      opacity: 0;
    }
    to {
      width: 100%;
      opacity: 1;
    }
  }
  
  /* Transición suave para todos los enlaces */
  {{ ns_selector }} {
    transition: color 0.3s ease, font-weight 0.3s ease;
  }
  
  /* Hover en enlaces */
  {{ ns_selector }}:hover {
    color: {{ block.settings.hover_color | default: '#333' }};
  }
  
  /* Asegurar que las anclas sean invisibles */
  .section-anchor {
    display: block;
    position: relative;
    top: calc(-1 * {{ ns_offset }}px - 20px);
    visibility: hidden;
    height: 0;
    pointer-events: none;
  }
</style>
{% endif %}

{% comment %}
  Script adicional para funcionalidades extendidas
  Solo se carga si hay características avanzadas activas
{% endcomment %}
{% if ns_use_anchors and ns_scroll_spy %}
<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Extender funcionalidad del script principal
    const config = {
      selector: '{{ ns_selector | escape }}',
      activeClass: '{{ ns_active_class | escape }}',
      offset: '{{ ns_offset }}'
    };
    
    // Observador de intersección para scroll spy
    if ('IntersectionObserver' in window) {
      const sections = document.querySelectorAll('.section-anchor[id], section[id]');
      const navLinks = document.querySelectorAll(config.selector);
      
      // Calcular offset
      function getOffset() {
        const offsetValue = config.offset;
        if (offsetValue && offsetValue.startsWith('#')) {
          const el = document.querySelector(offsetValue);
          return el ? el.offsetHeight : 0;
        }
        return parseInt(offsetValue) || 0;
      }
      
      // Opciones del observador
      const observerOptions = {
        rootMargin: `-${getOffset()}px 0px -50% 0px`,
        threshold: [0, 0.25, 0.5, 0.75, 1]
      };
      
      // Map para rastrear secciones visibles
      const visibleSections = new Map();
      
      // Callback del observador
      const observerCallback = (entries) => {
        entries.forEach(entry => {
          const id = entry.target.id;
          if (entry.isIntersecting) {
            visibleSections.set(id, entry.intersectionRatio);
          } else {
            visibleSections.delete(id);
          }
        });
        
        // Encontrar la sección más visible
        let maxRatio = 0;
        let activeId = null;
        
        visibleSections.forEach((ratio, id) => {
          if (ratio > maxRatio) {
            maxRatio = ratio;
            activeId = id;
          }
        });
        
        // Actualizar clases activas
        navLinks.forEach(link => {
          const href = link.getAttribute('href');
          if (href && href.startsWith('#')) {
            const linkId = href.substring(1);
            if (linkId === activeId) {
              link.classList.add(config.activeClass);
            } else {
              link.classList.remove(config.activeClass);
            }
          }
        });
      };
      
      // Crear y aplicar el observador
      const observer = new IntersectionObserver(observerCallback, observerOptions);
      sections.forEach(section => {
        if (section.id) {
          observer.observe(section);
        }
      });
      
      // Limpiar al salir de la página
      window.addEventListener('beforeunload', () => {
        observer.disconnect();
      });
    }
    
    // Agregar indicador de scroll activo
    let scrolling = false;
    let scrollTimeout;
    
    window.addEventListener('scroll', () => {
      if (!scrolling) {
        document.body.classList.add('is-scrolling');
        scrolling = true;
      }
      
      clearTimeout(scrollTimeout);
      scrollTimeout = setTimeout(() => {
        document.body.classList.remove('is-scrolling');
        scrolling = false;
      }, 150);
    });
    
    // Evento personalizado cuando se navega
    window.addEventListener('smoothScrollComplete', (e) => {
      console.log('Navegación completada a:', e.detail);
      
      // Puedes agregar analytics o acciones adicionales aquí
      if (window.gtag) {
        gtag('event', 'smooth_scroll', {
          'target_section': e.detail.target
        });
      }
    });
  });
</script>
{% endif %}

{% comment %}
  Schema para cuando se usa como bloque
{% endcomment %}
{% schema %}
{
  "name": "Navegación Suave",
  "target": "section",
  "settings": [
    {
      "type": "header",
      "content": "🎯 Configuración Principal"
    },
    {
      "type": "text",
      "id": "selector",
      "label": "Selector CSS de enlaces",
      "default": "a[href^=\"#\"]",
      "info": "Qué enlaces activarán la navegación suave"
    },
    {
      "type": "text",
      "id": "offset",
      "label": "Offset superior",
      "default": "0",
      "info": "Píxeles o selector CSS del header (ej: '#header' o '80'). Usa 'auto' para detectar automáticamente."
    },
    {
      "type": "range",
      "id": "duration",
      "label": "Duración del scroll (ms)",
      "min": 100,
      "max": 2000,
      "step": 100,
      "default": 600
    },
    {
      "type": "header",
      "content": "⚙️ Comportamiento"
    },
    {
      "type": "checkbox",
      "id": "update_url",
      "label": "Actualizar URL con hash",
      "default": false,
      "info": "Si actualiza la barra de direcciones al navegar"
    },
    {
      "type": "checkbox",
      "id": "allow_query",
      "label": "Permitir navegación por query",
      "default": true,
      "info": "Permite URLs como ?sec=productos"
    },
    {
      "type": "checkbox",
      "id": "smooth_only",
      "label": "Solo scroll suave",
      "default": false,
      "info": "Desactiva todas las funciones adicionales"
    },
    {
      "type": "header",
      "content": "🔄 Integración con Anclas"
    },
    {
      "type": "checkbox",
      "id": "use_anchors",
      "label": "Usar sistema de anclas",
      "default": true,
      "info": "Integración con el sistema de anclas de sección"
    },
    {
      "type": "checkbox",
      "id": "scroll_spy",
      "label": "Activar scroll spy",
      "default": true,
      "info": "Resalta automáticamente la sección visible"
    },
    {
      "type": "text",
      "id": "active_class",
      "label": "Clase CSS activa",
      "default": "nav-active",
      "info": "Clase aplicada al enlace de la sección visible"
    },
    {
      "type": "header",
      "content": "🎨 Estilos"
    },
    {
      "type": "color",
      "id": "active_color",
      "label": "Color del enlace activo",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "hover_color",
      "label": "Color al pasar el mouse",
      "default": "#333333"
    }
  ]
}
{% endschema %}